<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>default</LangVersion>
    <AssemblyVersion>1.0.4</AssemblyVersion>
    <FileVersion>$(AssemblyVersion)</FileVersion>
    <InformationalVersion>$(AssemblyVersion)</InformationalVersion>
    <BeatSaberDir>D:\Oculus\Software\hyperbolic-magnetism-beat-saber</BeatSaberDir>
    <BeatSaberDir2>D:\Oculus\Software\hyperbolic-magnetism-beat-saber</BeatSaberDir2>
    <Version>1.0.4</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors>NU1605</WarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="BSML, Version=1.0.6.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberDir)\Plugins\BSML.dll</HintPath>
    </Reference>
    <Reference Include="BS_Utils">
      <HintPath>$(BeatSaberDir)\Plugins\BS_Utils.dll</HintPath>
    </Reference>
    <Reference Include="HMLib">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\HMLib.dll</HintPath>
    </Reference>
    <Reference Include="HMUI">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\HMUI.dll</HintPath>
    </Reference>
    <Reference Include="IPA.Loader">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\IPA.Loader.dll</HintPath>
    </Reference>
    <Reference Include="Main">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\Main.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UIElementsModule">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\UnityEngine.UIElementsModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\UnityEngine.UIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.VRModule">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\UnityEngine.VRModule.dll</HintPath>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(BeatSaberDir)\Beat Saber_Data\Managed\Unity.TextMeshPro.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Remove="Resources\description.md" />
    <None Remove="Views\SettingsView.bsml" />
    <EmbeddedResource Include="Resources\description.md" />
    <None Remove="Resources\icon.png" />
    <EmbeddedResource Include="Resources\icon.png" />
    <EmbeddedResource Include="Views\StatisticsView.bsml" />
    <EmbeddedResource Include="Views\SettingsView.bsml" />
    <None Remove="manifest.json" />
    <EmbeddedResource Include="manifest.json" />
  </ItemGroup>

  <Target Name="CopyToPlugins" AfterTargets="AfterBuild">
    <Copy Condition="Exists('$(BeatSaberDir)')" SourceFiles="$(TargetDir)\LagKiller.dll" DestinationFolder="$(BeatSaberDir)\Plugins" ContinueOnError="false" />
    <Copy Condition="Exists('$(BeatSaberDir2)')" SourceFiles="$(TargetDir)\LagKiller.dll" DestinationFolder="$(BeatSaberDir2)\Plugins" ContinueOnError="false" />
  </Target>

  <Target Name="BuildReleaseZip" DependsOnTargets="Build">
    <PropertyGroup>
      <ReleaseDir Condition="'$(ReleaseDir)'==''">$(TargetDir)</ReleaseDir>
      <ReleaseTmpDir>$(TargetDir)</ReleaseTmpDir>
      <StringDate>$([System.DateTime]::Now.ToString('yyyyMMdd'))</StringDate>
      <ReleaseZipPath>$(ReleaseDir)\LagKiller_$(FileVersion).zip</ReleaseZipPath>
    </PropertyGroup>
    <MakeDir Directories="$(ReleaseTmpDir)\Plugins" />
    <Copy SourceFiles="$(TargetDir)\LagKiller.dll" DestinationFolder="$(ReleaseTmpDir)\Plugins" ContinueOnError="false" />
    <Delete Files="$(ReleaseZipPath)" ContinueOnError="true" />
    <Exec Command="PowerShell -command Compress-Archive $(ReleaseTmpDir)\Plugins $(ReleaseZipPath) -CompressionLevel Optimal" />
    <RemoveDir Directories="$(ReleaseTmpDir)\Plugins" />
  </Target>
  
</Project>
